NOTE:
 - Handle () first;
 - Then using while to handle (*) and **, for ** be careful with ********.
   ******** -> *0*0*0*0 -> **** -> *0*0 -> ** -> *0 -> *

class Solution {
public:
    int scoreOfParentheses(string S) {
        vector<int> ans;
        for (int i = 0; i < S.size(); i++) {
            if (S[i] == '(') ans.push_back(-1);
            if (S[i] == ')') {
                if (S[i - 1] == '(') {
                    ans.pop_back();
                    ans.push_back(1);
                } else {
                    ans.push_back(-2);
                }
            }
        }
        while (ans.size() > 1) {
            vector<int> tmp;
            for (int i = 0; i < ans.size(); i++) {
                tmp.push_back(ans[i]);
                if (ans[i] != -1 && ans[i] != -2) {
                    if (ans[i - 1] == -1 && ans[i + 1] == -2) {
                        tmp.pop_back();
                        tmp.pop_back();
                        tmp.push_back(2 * ans[i++]);
                    }
                    else if (ans[i - 1] != -1 && ans[i - 1] != -2 && ans[i - 1] != 0) {
                        tmp.pop_back();
                        tmp.pop_back();
                        tmp.push_back(ans[i - 1] + ans[i]);
                        ans[i] = 0;
                    }
                }
            }
            ans = tmp;
        }
        return ans[0];
    }
};
